
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    match /users/{userId} {
      allow read, update, delete: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && isOwner(userId);
    }

    match /posts/{postId} {
      allow read, list: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated(); // For likes
      allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    match /posts/{postId}/comments/{commentId} {
      allow read, list, create: if isAuthenticated();
      allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    match /moodEntries/{entryId} {
        allow read, list, create: if isAuthenticated() && isOwner(request.resource.data.userId);
        allow update, delete: if isAuthenticated() && isOwner(resource.data.userId);
    }
  }
}
